{"version":3,"sources":["webpack:///app.js","webpack:///./src/bootstrap.ts","webpack:///./src/app/providers/appModel.ts","webpack:///./src/app/providers/matchListService.ts","webpack:///./~/d3/d3.js","webpack:///./src/app.css","webpack:///./src/app.html","webpack:///./src/app/champions/champions.css","webpack:///./src/app/champions/champions.html","webpack:///./src/app/dates/dates.html","webpack:///./src/app/home/home.css","webpack:///./src/app/home/home.html","webpack:///./src/app/roles/roles.html","webpack:///./src/app.ts","webpack:///./src/app/champions/champions.ts","webpack:///./src/app/dates/dates.ts","webpack:///./src/app/directives/x-large.ts","webpack:///./src/app/home/home.ts","webpack:///./src/app/roles/roles.ts"],"names":["webpackJsonp",0,"module","exports","__webpack_require__","main","browser_1","router_1","http_1","common_dom_1","app_1","document","addEventListener",46,"AppModel","AppModel.constructor","AppModel.changeSummonerName",236,"__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1","appModel_1","MatchListService","MatchListService.constructor","MatchListService.loadMatches","MatchListService.setRankedMatchesList","Http",302,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_zipLength","d3_range_integerScale","d3_class","ctor","properties","prototype","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined",305,306,307,308,309,310,311,312,508,"common_1","x_large_1","home_1","champions_1","roles_1","dates_1","App","App.constructor",509,"matchListService_1","Champions","Champions.constructor","Champions.loadChampions","Champions.drawChart","chart","div","championName","timesPlayed","Champions.ngOnInit","RouteParams",510,"Dates","Dates.constructor","Dates.ngOnInit",511,"XLarge","XLarge.constructor","ElementRef","Renderer",512,"Home","Home.constructor","Home.loadMatches","Home.ngOnInit",513,"Roles","Roles.constructor","Roles.ngOnInit"],"mappings":"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","file":"app.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar browser_1 = __webpack_require__(145);\n\tvar router_1 = __webpack_require__(66);\n\tvar http_1 = __webpack_require__(96);\n\tvar common_dom_1 = __webpack_require__(97);\n\tvar app_1 = __webpack_require__(508);\n\tfunction main() {\n\t    return browser_1.bootstrap(app_1.App, [\n\t        http_1.HTTP_PROVIDERS,\n\t        router_1.ROUTER_PROVIDERS,\n\t        common_dom_1.ELEMENT_PROBE_PROVIDERS\n\t    ])\n\t        .catch(function (err) { return console.error(err); });\n\t}\n\tdocument.addEventListener('DOMContentLoaded', main);\n\n\n/***/ },\n\n/***/ 46:\n/***/ function(module, exports) {\n\n\tvar AppModel = (function () {\n\t    function AppModel() {\n\t        this.summonerName = '';\n\t        this.rankedMatchesList = {\n\t            matchesByChamp: {},\n\t            matchesByDay: {},\n\t            matchesByMonth: {},\n\t            matchesByHour: {},\n\t            matchesByRole: {},\n\t            championName: 'waitforit',\n\t            matchesNumber: 0\n\t        };\n\t    }\n\t    AppModel.prototype.changeSummonerName = function (summonerName) {\n\t        this.summonerName = summonerName;\n\t    };\n\t    return AppModel;\n\t})();\n\texports.AppModel = AppModel;\n\t;\n\n\n/***/ },\n\n/***/ 236:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar http_1 = __webpack_require__(96);\n\tvar appModel_1 = __webpack_require__(46);\n\tvar MatchListService = (function () {\n\t    function MatchListService(http, app) {\n\t        this.http = http;\n\t        this.app = app;\n\t        this.http = http;\n\t        this.rankedMatchesList = {\n\t            matchesByChamp: {},\n\t            matchesByRole: {},\n\t            championName: 'waitforit',\n\t            matchesNumber: 0\n\t        };\n\t    }\n\t    MatchListService.prototype.loadMatches = function () {\n\t        return this.http.get(\"http://localhost:4000/login/\" + this.app.summonerName)\n\t            .map(function (res) { return res.json(); });\n\t    };\n\t    MatchListService.prototype.setRankedMatchesList = function (rankedMatchesList) {\n\t        this.app.rankedMatchesList = rankedMatchesList;\n\t    };\n\t    MatchListService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http, appModel_1.AppModel])\n\t    ], MatchListService);\n\t    return MatchListService;\n\t})();\n\texports.MatchListService = MatchListService;\n\n\n/***/ },\n\n/***/ 302:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.12\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 305:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"a {\\n    text-decoration: none;\\n    color: ghostwhite;\\n}\\nh1 {\\n\\tmargin: 0;\\n\\tcolor: ghostwhite;\\n}\\n\\nheader {\\n\\tpadding: 0.5rem 2rem;\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\talign-items: center;\\n \\tbackground: #cb3837;\\n    border-bottom: 1px solid #b83130;\\n}\\n\\nnav {\\n    flex: 1;\\n    display: flex;\\n\\tflex-direction: row;\\n    justify-content: flex-end;\\n}\\n\\nmain {\\n\\tflex: 1;\\n\\tpadding: 2rem;\\n}\\n\\n.navigation--link {\\n    padding: 0 0.5rem;\\n\\tcolor: ghostwhite;\\n}\\n\\nfooter {\\n\\tdisplay: flex;\\n\\theight: 2rem;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tcolor: ghostwhite;\\n \\tbackground: royalblue;\\n}\\n\"\n\n/***/ },\n\n/***/ 306:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header>\\n    <h1> <a [routerLink]=\\\" ['Home'] \\\">RankLoL</a></h1>\\n    <nav>\\n        <a class=\\\"navigation--link\\\" [routerLink]=\\\" ['Champions', {summoner:app.summonerName}] \\\">Champions</a>\\n        <a class=\\\"navigation--link\\\" [routerLink]=\\\" ['Roles'] \\\">Roles</a>\\n\\n        <a class=\\\"navigation--link\\\" [routerLink]=\\\" ['Dates'] \\\">Dates</a>\\n    </nav>\\n    <div>\\n        Logged in as : {{ app.summonerName }}\\n    </div>\\n</header>\\n\\n<main>\\n    <router-outlet></router-outlet>\\n</main>\\n\"\n\n/***/ },\n\n/***/ 307:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\"\n\n/***/ },\n\n/***/ 308:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n    List of champions played for summoner : {{app.summonerName}}\\n    <div class='chart'>\\n    </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 309:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n    Which hour is the best moment to play for {{app.summonerName}} ?\\n\\t<div *ngFor='#hour of dates.byHour'>\\n    \\t{{hour.hour}}H : {{hour.timesPlayed}} games played\\n\\t</div>\\n</div>\\n<div>\\n    Which day is the best moment to play for {{app.summonerName}} ?\\n\\t<div *ngFor='#day of dates.byDay'>\\n    \\t{{day.day}} : {{day.timesPlayed}} games played\\n\\t</div>\\n</div>\\n<div>\\n    Which month is the best moment to play for {{app.summonerName}} ?\\n\\t<div *ngFor='#month of dates.byMonth'>\\n    \\t{{month.month}} : {{month.timesPlayed}} games played\\n\\t</div>\\n</div>\"\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".home--button {\\n    background: #cb3837;\\n    border: none;\\n    color: ghostwhite;\\n    height: 3rem;\\n    width: 11rem;\\n    display: inline-block;\\n    transition: background 0.25s ease-out;\\n}\\n\\n.home--button:hover {\\n    background: #b83130;\\n}\\n\"\n\n/***/ },\n\n/***/ 311:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n\\t<label>Enter your summoner name :</label>\\n\\t<input\\n\\t\\ttype=\\\"text\\\"\\n        [value]=\\\"app.summonerName\\\"\\n\\t\\t(input)=\\\"app.summonerName = $event.target.value\\\"\\n\\t\\tautofocus/>\\n    <button\\n     (click)=\\\"loadMatches()\\\"\\n     class=\\\"home--button\\\">\\n\\t\\tLoad summoner pre season games\\n\\t</button>\\n\\n\\t<div *ngIf=\\\"app.rankedMatchesList.matchesNumber > 0\\\">\\n    \\tYou played : {{app.rankedMatchesList.matchesNumber}} games.\\n\\t</div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 312:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n    List of roles played for summoner : {{app.summonerName}}\\n\\t<div *ngFor='#role of roles'>\\n    \\t{{role.roleName}} : {{role.timesPlayed}}\\n\\t</div>\\n</div>\"\n\n/***/ },\n\n/***/ 508:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar router_1 = __webpack_require__(66);\n\tvar common_1 = __webpack_require__(34);\n\tvar appModel_1 = __webpack_require__(46);\n\tvar x_large_1 = __webpack_require__(511);\n\tvar home_1 = __webpack_require__(512);\n\tvar champions_1 = __webpack_require__(509);\n\tvar roles_1 = __webpack_require__(513);\n\tvar dates_1 = __webpack_require__(510);\n\tvar App = (function () {\n\t    function App(app) {\n\t        this.app = app;\n\t    }\n\t    App = __decorate([\n\t        core_1.Component({\n\t            selector: 'app',\n\t            providers: common_1.FORM_PROVIDERS.concat([appModel_1.AppModel]),\n\t            directives: router_1.ROUTER_DIRECTIVES.concat([x_large_1.XLarge]),\n\t            pipes: [],\n\t            styles: [__webpack_require__(305)],\n\t            template: __webpack_require__(306)\n\t        }),\n\t        router_1.RouteConfig([\n\t            { path: '/', component: home_1.Home, name: 'Home' },\n\t            { path: '/:summoner/champions', component: champions_1.Champions, name: 'Champions' },\n\t            { path: '/roles', component: roles_1.Roles, name: 'Roles' },\n\t            { path: '/dates', component: dates_1.Dates, name: 'Dates' },\n\t        ]), \n\t        __metadata('design:paramtypes', [appModel_1.AppModel])\n\t    ], App);\n\t    return App;\n\t})();\n\texports.App = App;\n\n\n/***/ },\n\n/***/ 509:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar common_1 = __webpack_require__(34);\n\tvar appModel_1 = __webpack_require__(46);\n\tvar matchListService_1 = __webpack_require__(236);\n\tvar router_1 = __webpack_require__(66);\n\tvar d3 = __webpack_require__(302);\n\tvar Champions = (function () {\n\t    function Champions(app, matchListService, routeParam) {\n\t        var _this = this;\n\t        this.app = app;\n\t        this.matchListService = matchListService;\n\t        this.routeParam = routeParam;\n\t        this.app.summonerName = routeParam.params.summoner;\n\t        if (!Object.keys(this.app.rankedMatchesList.matchesByChamp).length) {\n\t            this.matchListService\n\t                .loadMatches()\n\t                .subscribe(function (res) {\n\t                _this.app.rankedMatchesList = res;\n\t                _this.loadChampions();\n\t                _this.drawChart();\n\t            });\n\t        }\n\t        else {\n\t            this.loadChampions();\n\t            this.drawChart();\n\t        }\n\t    }\n\t    Champions.prototype.loadChampions = function () {\n\t        var _this = this;\n\t        this.champions = [];\n\t        Object.keys(this.app.rankedMatchesList.matchesByChamp)\n\t            .forEach(function (championName) {\n\t            _this.champions.push({\n\t                championName: championName,\n\t                timesPlayed: _this.app.rankedMatchesList.matchesByChamp[championName]\n\t            });\n\t        });\n\t        this.champions.sort(function (a, b) {\n\t            return a.timesPlayed - b.timesPlayed;\n\t        });\n\t        this.champions.reverse();\n\t    };\n\t    Champions.prototype.drawChart = function () {\n\t        var x = d3.scale.linear()\n\t            .domain([0, d3.max(this.champions.map(function (c) { return c.timesPlayed; }))])\n\t            .range([0, 50]);\n\t        d3.select(\".chart\").html(\"\");\n\t        this.champions.forEach(function (c) {\n\t            var chart = d3.select(\".chart\");\n\t            var div = chart.append(\"div\")\n\t                .attr(\"class\", \"chart-holder\");\n\t            div.append(\"span\")\n\t                .attr(\"class\", \"float-left\")\n\t                .text(function () { return c.championName + \" - \" + c.timesPlayed; });\n\t            div.insert(\"div\")\n\t                .attr(\"class\", \"blue-bar\")\n\t                .style(\"width\", function () {\n\t                return x(c.timesPlayed) + \"%\";\n\t            });\n\t        });\n\t    };\n\t    Champions.prototype.ngOnInit = function () {\n\t        console.log('hello champions');\n\t    };\n\t    Champions = __decorate([\n\t        core_1.Component({\n\t            selector: 'champions',\n\t            directives: common_1.FORM_DIRECTIVES.concat([common_1.NgFor]),\n\t            providers: [matchListService_1.MatchListService],\n\t            pipes: [],\n\t            styles: [__webpack_require__(307)],\n\t            template: __webpack_require__(308)\n\t        }), \n\t        __metadata('design:paramtypes', [appModel_1.AppModel, matchListService_1.MatchListService, router_1.RouteParams])\n\t    ], Champions);\n\t    return Champions;\n\t})();\n\texports.Champions = Champions;\n\n\n/***/ },\n\n/***/ 510:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar common_1 = __webpack_require__(34);\n\tvar appModel_1 = __webpack_require__(46);\n\tvar Dates = (function () {\n\t    function Dates(app) {\n\t        var _this = this;\n\t        this.app = app;\n\t        this.dates = {\n\t            byHour: [],\n\t            byDay: [],\n\t            byMonth: []\n\t        };\n\t        Object.keys(app.rankedMatchesList.matchesByHour)\n\t            .forEach(function (hour) {\n\t            _this.dates.byHour.push({\n\t                hour: hour,\n\t                timesPlayed: app.rankedMatchesList.matchesByHour[hour]\n\t            });\n\t        });\n\t        Object.keys(app.rankedMatchesList.matchesByDay)\n\t            .forEach(function (day) {\n\t            _this.dates.byDay.push({\n\t                day: day,\n\t                timesPlayed: app.rankedMatchesList.matchesByDay[day]\n\t            });\n\t        });\n\t        Object.keys(app.rankedMatchesList.matchesByMonth)\n\t            .forEach(function (month) {\n\t            _this.dates.byMonth.push({\n\t                month: month,\n\t                timesPlayed: app.rankedMatchesList.matchesByMonth[month]\n\t            });\n\t        });\n\t    }\n\t    Dates.prototype.ngOnInit = function () {\n\t        console.log('hello dates');\n\t    };\n\t    Dates = __decorate([\n\t        core_1.Component({\n\t            selector: 'dates',\n\t            directives: common_1.FORM_DIRECTIVES.concat([common_1.NgFor]),\n\t            providers: [],\n\t            pipes: [],\n\t            styles: [],\n\t            template: __webpack_require__(309)\n\t        }), \n\t        __metadata('design:paramtypes', [appModel_1.AppModel])\n\t    ], Dates);\n\t    return Dates;\n\t})();\n\texports.Dates = Dates;\n\n\n/***/ },\n\n/***/ 511:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar XLarge = (function () {\n\t    function XLarge(element, renderer) {\n\t        renderer.setElementStyle(element, 'fontSize', 'x-large');\n\t    }\n\t    XLarge = __decorate([\n\t        core_1.Directive({\n\t            selector: '[x-large]'\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef, core_1.Renderer])\n\t    ], XLarge);\n\t    return XLarge;\n\t})();\n\texports.XLarge = XLarge;\n\n\n/***/ },\n\n/***/ 512:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar common_1 = __webpack_require__(34);\n\tvar matchListService_1 = __webpack_require__(236);\n\tvar appModel_1 = __webpack_require__(46);\n\tvar Home = (function () {\n\t    function Home(app, matchListService) {\n\t        this.app = app;\n\t        this.matchListService = matchListService;\n\t    }\n\t    Home.prototype.loadMatches = function () {\n\t        var _this = this;\n\t        this.matchListService\n\t            .loadMatches()\n\t            .subscribe(function (res) { return _this.app.rankedMatchesList = res; });\n\t    };\n\t    Home.prototype.ngOnInit = function () {\n\t        console.log('hello Home');\n\t    };\n\t    Home = __decorate([\n\t        core_1.Component({\n\t            selector: 'home',\n\t            directives: common_1.FORM_DIRECTIVES.slice(),\n\t            providers: [matchListService_1.MatchListService],\n\t            pipes: [],\n\t            styles: [__webpack_require__(310)],\n\t            template: __webpack_require__(311)\n\t        }), \n\t        __metadata('design:paramtypes', [appModel_1.AppModel, matchListService_1.MatchListService])\n\t    ], Home);\n\t    return Home;\n\t})();\n\texports.Home = Home;\n\n\n/***/ },\n\n/***/ 513:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(5);\n\tvar common_1 = __webpack_require__(34);\n\tvar appModel_1 = __webpack_require__(46);\n\tvar Roles = (function () {\n\t    function Roles(app) {\n\t        var _this = this;\n\t        this.app = app;\n\t        this.roles = [];\n\t        Object.keys(app.rankedMatchesList.matchesByRole)\n\t            .forEach(function (roleName) {\n\t            _this.roles.push({\n\t                roleName: roleName,\n\t                timesPlayed: app.rankedMatchesList.matchesByRole[roleName]\n\t            });\n\t        });\n\t    }\n\t    Roles.prototype.ngOnInit = function () {\n\t        console.log('hello roles');\n\t    };\n\t    Roles = __decorate([\n\t        core_1.Component({\n\t            selector: 'roles',\n\t            directives: common_1.FORM_DIRECTIVES.concat([common_1.NgFor]),\n\t            providers: [],\n\t            pipes: [],\n\t            styles: [],\n\t            template: __webpack_require__(312)\n\t        }), \n\t        __metadata('design:paramtypes', [appModel_1.AppModel])\n\t    ], Roles);\n\t    return Roles;\n\t})();\n\texports.Roles = Roles;\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/","/*\n * Providers provided by Angular\n */\nimport {bootstrap} from 'angular2/platform/browser';\nimport {ROUTER_PROVIDERS} from 'angular2/router';\nimport {HTTP_PROVIDERS} from 'angular2/http';\n// include for development builds\nimport {ELEMENT_PROBE_PROVIDERS} from 'angular2/platform/common_dom';\n// include for production builds\n// import {enableProdMode} from 'angular2/core';\n\n/*\n * App Component\n * our top level component that holds all of our components\n */\nimport {App} from './app';\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\n// enableProdMode() // include for production builds\nfunction main() {\n  return bootstrap(App, [\n    // These are dependencies of our App\n    HTTP_PROVIDERS,\n    ROUTER_PROVIDERS,\n    ELEMENT_PROBE_PROVIDERS // remove in production\n  ])\n  .catch(err => console.error(err));\n}\n\ndocument.addEventListener('DOMContentLoaded', main);\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/bootstrap.ts\n **/","export class AppModel {\n  summonerName: string;\n    rankedMatchesList:{\n    matchesByChamp:{},\n    matchesByDay:{},\n    matchesByMonth:{},\n    matchesByHour:{},\n    matchesByRole:{},\n    championName:string,\n    matchesNumber:number\n  };\n  constructor() {\n    this.summonerName = '';\n    this.rankedMatchesList = {\n      matchesByChamp: {},\n      matchesByDay:{},\n      matchesByMonth:{},\n      matchesByHour:{},\n      matchesByRole:{},\n      championName: 'waitforit',\n      matchesNumber: 0\n    };\n  }\n\n  changeSummonerName(summonerName){\n      this.summonerName = summonerName;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/providers/appModel.ts\n **/","import {Injectable} from 'angular2/core';\n\nimport {Http} from 'angular2/http';\nimport {AppModel} from '../providers/appModel';\n\n@Injectable()\nexport class MatchListService {\n  rankedMatchesList: {\n    matchesByChamp:{},\n    matchesByRole:{},\n    championName:string,\n    matchesNumber:number\n  };\n  constructor(public http: Http, public app: AppModel) {\n    this.http = http;\n    this.rankedMatchesList = {\n      matchesByChamp: {},\n      matchesByRole:{},\n      championName: 'waitforit',\n      matchesNumber: 0\n    };\n  }\n\n  loadMatches() {\n    return this.http.get(`http://localhost:4000/login/${this.app.summonerName}`)\n      // Call map on the response observable to get the parsed people object\n      .map(res => res.json());\n      // Subscribe to the observable to get the parsed object\n      // .subscribe(matchList => {\n      //   this.setRankedMatchesList(matchList);\n      //   return matchList;\n      // });\n  }\n\n  setRankedMatchesList(rankedMatchesList) {\n      this.app.rankedMatchesList = rankedMatchesList;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/providers/matchListService.ts\n **/","!function() {\n  var d3 = {\n    version: \"3.5.12\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 302\n ** module chunks = 2\n **/","module.exports = \"a {\\n    text-decoration: none;\\n    color: ghostwhite;\\n}\\nh1 {\\n\\tmargin: 0;\\n\\tcolor: ghostwhite;\\n}\\n\\nheader {\\n\\tpadding: 0.5rem 2rem;\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\talign-items: center;\\n \\tbackground: #cb3837;\\n    border-bottom: 1px solid #b83130;\\n}\\n\\nnav {\\n    flex: 1;\\n    display: flex;\\n\\tflex-direction: row;\\n    justify-content: flex-end;\\n}\\n\\nmain {\\n\\tflex: 1;\\n\\tpadding: 2rem;\\n}\\n\\n.navigation--link {\\n    padding: 0 0.5rem;\\n\\tcolor: ghostwhite;\\n}\\n\\nfooter {\\n\\tdisplay: flex;\\n\\theight: 2rem;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\tcolor: ghostwhite;\\n \\tbackground: royalblue;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.css\n ** module id = 305\n ** module chunks = 2\n **/","module.exports = \"<header>\\n    <h1> <a [routerLink]=\\\" ['Home'] \\\">RankLoL</a></h1>\\n    <nav>\\n        <a class=\\\"navigation--link\\\" [routerLink]=\\\" ['Champions', {summoner:app.summonerName}] \\\">Champions</a>\\n        <a class=\\\"navigation--link\\\" [routerLink]=\\\" ['Roles'] \\\">Roles</a>\\n\\n        <a class=\\\"navigation--link\\\" [routerLink]=\\\" ['Dates'] \\\">Dates</a>\\n    </nav>\\n    <div>\\n        Logged in as : {{ app.summonerName }}\\n    </div>\\n</header>\\n\\n<main>\\n    <router-outlet></router-outlet>\\n</main>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.html\n ** module id = 306\n ** module chunks = 2\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/champions/champions.css\n ** module id = 307\n ** module chunks = 2\n **/","module.exports = \"<div>\\n    List of champions played for summoner : {{app.summonerName}}\\n    <div class='chart'>\\n    </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/champions/champions.html\n ** module id = 308\n ** module chunks = 2\n **/","module.exports = \"<div>\\n    Which hour is the best moment to play for {{app.summonerName}} ?\\n\\t<div *ngFor='#hour of dates.byHour'>\\n    \\t{{hour.hour}}H : {{hour.timesPlayed}} games played\\n\\t</div>\\n</div>\\n<div>\\n    Which day is the best moment to play for {{app.summonerName}} ?\\n\\t<div *ngFor='#day of dates.byDay'>\\n    \\t{{day.day}} : {{day.timesPlayed}} games played\\n\\t</div>\\n</div>\\n<div>\\n    Which month is the best moment to play for {{app.summonerName}} ?\\n\\t<div *ngFor='#month of dates.byMonth'>\\n    \\t{{month.month}} : {{month.timesPlayed}} games played\\n\\t</div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/dates/dates.html\n ** module id = 309\n ** module chunks = 2\n **/","module.exports = \".home--button {\\n    background: #cb3837;\\n    border: none;\\n    color: ghostwhite;\\n    height: 3rem;\\n    width: 11rem;\\n    display: inline-block;\\n    transition: background 0.25s ease-out;\\n}\\n\\n.home--button:hover {\\n    background: #b83130;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.css\n ** module id = 310\n ** module chunks = 2\n **/","module.exports = \"<div>\\n\\t<label>Enter your summoner name :</label>\\n\\t<input\\n\\t\\ttype=\\\"text\\\"\\n        [value]=\\\"app.summonerName\\\"\\n\\t\\t(input)=\\\"app.summonerName = $event.target.value\\\"\\n\\t\\tautofocus/>\\n    <button\\n     (click)=\\\"loadMatches()\\\"\\n     class=\\\"home--button\\\">\\n\\t\\tLoad summoner pre season games\\n\\t</button>\\n\\n\\t<div *ngIf=\\\"app.rankedMatchesList.matchesNumber > 0\\\">\\n    \\tYou played : {{app.rankedMatchesList.matchesNumber}} games.\\n\\t</div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home/home.html\n ** module id = 311\n ** module chunks = 2\n **/","module.exports = \"<div>\\n    List of roles played for summoner : {{app.summonerName}}\\n\\t<div *ngFor='#role of roles'>\\n    \\t{{role.roleName}} : {{role.timesPlayed}}\\n\\t</div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/roles/roles.html\n ** module id = 312\n ** module chunks = 2\n **/","/*\n * Angular 2 decorators and services\n */\nimport {Component} from 'angular2/core';\nimport {RouteConfig, Router, ROUTER_DIRECTIVES} from 'angular2/router';\nimport {Http} from 'angular2/http';\nimport {FORM_PROVIDERS} from 'angular2/common';\n\nimport {AppModel} from './app/providers/appModel';\nimport {XLarge} from './app/directives/x-large';\n\nimport {Home} from './app/home/home';\nimport {Champions} from './app/champions/champions';\nimport {Roles} from './app/roles/roles';\nimport {Dates} from './app/dates/dates';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'app'\n  selector: 'app', // <app></app>\n  // We need to tell Angular's Dependency Injection which providers are in our app.\n  providers: [ ...FORM_PROVIDERS, AppModel],\n  // We need to tell Angular's compiler which directives are in our template.\n  // Doing so will allow Angular to attach our behavior to an element\n  directives: [ ...ROUTER_DIRECTIVES, XLarge ],\n  // We need to tell Angular's compiler which custom pipes are in our template.\n  pipes: [],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [require('./app.css')],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: require('./app.html')\n})\n@RouteConfig([\n  { path: '/', component: Home, name: 'Home' },\n  { path: '/:summoner/champions', component: Champions, name: 'Champions' },\n  { path: '/roles', component: Roles, name: 'Roles' },\n  { path: '/dates', component: Dates, name: 'Dates' },\n])\nexport class App {\n  constructor(private app:AppModel) {\n  }\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n * or via chat on Gitter at https://gitter.im/AngularClass/angular2-webpack-starter\n */\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app.ts\n **/","import {Component} from 'angular2/core';\nimport {FORM_DIRECTIVES, NgFor} from 'angular2/common';\n\nimport {AppModel} from '../providers/appModel';\nimport {MatchListService} from '../providers/matchListService';\nimport { RouterLink, RouteParams } from 'angular2/router';\n\nconst d3 = require('d3');\n\n@Component({\n  selector: 'champions',\n  directives: [ ...FORM_DIRECTIVES, NgFor ],\n  providers: [ MatchListService ],\n  pipes: [],\n  styles: [ require('./champions.css') ],\n  template: require('./champions.html')\n})\nexport class Champions {\n  // TypeScript public modifiers\n  champions: Array<{\n      championName:string,\n      timesPlayed: number\n  }>;\n\n  routeParam: RouteParams;\n  constructor(private app:AppModel, public matchListService:MatchListService, routeParam: RouteParams) {\n    this.routeParam = routeParam;\n    this.app.summonerName = routeParam.params.summoner;\n\n    if (!Object.keys(this.app.rankedMatchesList.matchesByChamp).length) {\n        this.matchListService\n          .loadMatches()\n          .subscribe(res => {\n            this.app.rankedMatchesList = res\n            this.loadChampions();\n            this.drawChart();\n          });\n    }\n    else {\n      this.loadChampions();\n      this.drawChart();\n    }\n  }\n\n  loadChampions() {\n    this.champions = [];\n    Object.keys(this.app.rankedMatchesList.matchesByChamp)\n      .forEach(championName => {\n        this.champions.push({\n          championName: championName,\n          timesPlayed: this.app.rankedMatchesList.matchesByChamp[championName]\n        });\n    });\n\n    this.champions.sort((a, b) => {\n      return a.timesPlayed - b.timesPlayed;\n    });\n    this.champions.reverse();\n  }\n\n  drawChart() {\n    var x = d3.scale.linear()\n      .domain([0, d3.max(this.champions.map(c => c.timesPlayed))])\n      .range([0, 50]);\n\n    d3.select(\".chart\").html(\"\");\n\n    this.champions.forEach(function(c){\n      var chart = d3.select(\".chart\");\n      var div = chart.append(\"div\")\n                     .attr(\"class\", \"chart-holder\");\n      div.append(\"span\")\n          .attr(\"class\", \"float-left\")\n          .text(function() { return `${c.championName} - ${c.timesPlayed}`;});\n\n      div.insert(\"div\")\n          .attr(\"class\", \"blue-bar\")\n          .style(\"width\", function() {\n            return x(c.timesPlayed) + \"%\";\n          });\n    });\n  }\n\n  ngOnInit() {\n    console.log('hello champions');\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/champions/champions.ts\n **/","import {Component} from 'angular2/core';\nimport {FORM_DIRECTIVES, NgFor} from 'angular2/common';\n\nimport {AppModel} from '../providers/appModel';\n\n@Component({\n  selector: 'dates',\n  directives: [ ...FORM_DIRECTIVES, NgFor ],\n  providers: [ ],\n  pipes: [],\n  styles: [],\n  template: require('./dates.html')\n})\nexport class Dates {\n  // TypeScript public modifiers\n  dates: {\n    byHour: Array<{\n        hour:string,\n        timesPlayed:number\n    }>,\n    byDay: Array<{\n        day:string,\n        timesPlayed:number\n    }>,\n    byMonth: Array<{\n        month:string,\n        timesPlayed:number\n    }>,\n  }; \n     \n  constructor(private app:AppModel) {\n      this.dates = {\n          byHour: [],\n          byDay: [],\n          byMonth: []\n      };\n      \n      Object.keys(app.rankedMatchesList.matchesByHour)\n        .forEach(hour => {\n          this.dates.byHour.push({\n            hour: hour,\n            timesPlayed: app.rankedMatchesList.matchesByHour[hour]\n          }); \n      });\n      \n      Object.keys(app.rankedMatchesList.matchesByDay)\n        .forEach(day => {\n          this.dates.byDay.push({\n            day: day,\n            timesPlayed: app.rankedMatchesList.matchesByDay[day]\n          }); \n      });\n      \n      Object.keys(app.rankedMatchesList.matchesByMonth)\n        .forEach(month => {\n          this.dates.byMonth.push({\n            month: month,\n            timesPlayed: app.rankedMatchesList.matchesByMonth[month]\n          }); \n      });\n  }\n  \n  ngOnInit() {\n    console.log('hello dates');\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/dates/dates.ts\n **/","import {Directive, Component, ElementRef, Renderer} from 'angular2/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLarge {\n  constructor(element: ElementRef, renderer: Renderer) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element, 'fontSize', 'x-large');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/directives/x-large.ts\n **/","import {Component} from 'angular2/core';\nimport {FORM_DIRECTIVES} from 'angular2/common';\n\nimport {MatchListService} from '../providers/matchListService';\nimport {AppModel} from '../providers/appModel';\n\n@Component({\n  selector: 'home',\n  directives: [ ...FORM_DIRECTIVES ],\n  providers: [ MatchListService ],\n  pipes: [ ],\n  styles: [ require('./home.css') ],\n  template: require('./home.html')\n})\nexport class Home {\n  constructor(private app:AppModel, public matchListService:MatchListService){\n  }\n\n  loadMatches() {\n    this.matchListService\n      .loadMatches()\n      .subscribe(res => this.app.rankedMatchesList = res);\n  }\n\n  ngOnInit() {\n    console.log('hello Home');\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/home/home.ts\n **/","import {Component} from 'angular2/core';\nimport {FORM_DIRECTIVES, NgFor} from 'angular2/common';\n\nimport {AppModel} from '../providers/appModel';\n\n@Component({\n  selector: 'roles',\n  directives: [ ...FORM_DIRECTIVES, NgFor ],\n  providers: [ ],\n  pipes: [],\n  styles: [],\n  template: require('./roles.html')\n})\nexport class Roles {\n  // TypeScript public modifiers\n  roles: Array<{\n        roleName:string,\n        timesPlayed: number\n    }>; \n    \n  constructor(private app:AppModel) {\n      this.roles = [];\n      Object.keys(app.rankedMatchesList.matchesByRole)\n        .forEach(roleName => {\n          this.roles.push({\n            roleName: roleName,\n            timesPlayed: app.rankedMatchesList.matchesByRole[roleName]\n          }); \n      });\n  }\n  \n  ngOnInit() {\n    console.log('hello roles');\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/roles/roles.ts\n **/"],"sourceRoot":""}